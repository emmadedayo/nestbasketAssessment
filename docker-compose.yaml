version: '3.8'

services:
  # MySQL Database Service
  database:
    image: mysql:5.7
    container_name: database
    ports:
      - "3306:3306"
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: user_test
    volumes:
      - ./mysql:/var/lib/mysql
    networks:
      - server_network

  # RabbitMQ Service with Management Plugin
  rabbitmq:
    image: rabbitmq:3-management
    container_name: rabbitmq
    ports:
      - "15670:15672"
      - "5672:5672"
    environment:
      RABBITMQ_DEFAULT_USER: guest
      RABBITMQ_DEFAULT_PASS: guest
    networks:
      - server_network

  # User Service Microservice
  user-service-microservice:
    image: user-service-microservice:1.0.3  # Updated version
    build: user-microservice
    ports:
      - "8000:8000"
    env_file:
      - user-microservice/.env
    depends_on:
      - database
    networks:
      - server_network

  # Queue Service Microservice
  queue-service:
    build:
      context: user-microservice
      dockerfile: ./Dockerfile
    command: 'php artisan queue:work'
    depends_on:
      - database
      - rabbitmq  # Make sure it depends on RabbitMQ for correct startup order
    networks:
      - server_network

  # Notification Microservice
  notification-microservice:
    build:
      context: notification-microservice
      dockerfile: ./Dockerfile
    command: 'php artisan rabbitmq:consume'
    depends_on:
      - rabbitmq
    networks:
      - server_network
    env_file:
      - notification-microservice/.env

networks:
  server_network:
    driver: bridge
